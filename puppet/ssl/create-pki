#!/usr/bin/env bash
#
# For PKI infrastructure information, just read the doc:
# http://pki-tutorial.readthedocs.org/en/latest/index.html
#
# This script creates a root CA and a sub-CA.
# You just have to add the root CA to JKS, allowing
# to get multiple sub-CA, revoke them whenever you want/need.

# Ensure rights are correct on private directories
chmod 0700 ca/root-ca/private
chmod 0700 ca/sub-ca/private

# Create databases
> ca/root-ca/db/root-ca.db
> ca/root-ca/db/root-ca.db.attr

echo 01 > ca/root-ca/db/root-ca.crt.srl
echo 01 > ca/root-ca/db/root-ca.crl.srl

echo Create Root CA
openssl req -new \
  -config etc/root-ca.conf \
  -out ca/root-ca.csr \
  -keyout ca/root-ca/private/root-ca.key

echo Sign it
openssl ca -selfsign \
  -config etc/root-ca.conf \
  -in ca/root-ca.csr \
  -out ca/root-ca.crt \
  -extensions root_ca_ext \
  -days 18250 # more or less 50 years

echo Create CRL
openssl ca -gencrl \
  -config etc/root-ca.conf \
  -out crl/root-ca.crl

> ca/sub-ca/db/sub-ca.db
> ca/sub-ca/db/sub-ca.db.attr

echo 01 > ca/sub-ca/db/sub-ca.crt.srl
echo 01 > ca/sub-ca/db/sub-ca.crl.srl

echo Create sub-CA
openssl req -new \
  -config etc/sub-ca.conf \
  -out ca/sub-ca.csr \
  -keyout ca/sub-ca/private/sub-ca.key

echo Sign sub-ca
openssl ca \
  -config etc/root-ca.conf \
  -in ca/sub-ca.csr \
  -out ca/sub-ca.crt \
  -extensions signing_ca_ext

echo Create CRL
openssl ca -gencrl \
  -config etc/sub-ca.conf \
  -out crl/sub-ca.crl

echo Create bundle
cat ca/sub-ca.crt ca/root-ca.crt > ca/sub-ca-chain.pem

